// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetshopChallenge.Infra.Data;

namespace PetshopChallenge.Infra.Migrations
{
    [DbContext(typeof(PetShopContext))]
    partial class PetShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("PetshopChallenge.Domain.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<int>("Complemento")
                        .HasColumnType("int");

                    b.Property<string>("Complemento2")
                        .HasColumnType("text");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PetshopChallenge.Domain.Entities.Pet", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("OwnerAddress")
                        .HasColumnType("text");

                    b.Property<string>("OwnerCEP")
                        .HasColumnType("text");

                    b.Property<string>("OwnerCity")
                        .HasColumnType("text");

                    b.Property<string>("OwnerComplement")
                        .HasColumnType("text");

                    b.Property<string>("OwnerDistrict")
                        .HasColumnType("text");

                    b.Property<string>("OwnerName")
                        .HasColumnType("text");

                    b.Property<string>("OwnerPhone")
                        .HasColumnType("text");

                    b.Property<string>("OwnerState")
                        .HasColumnType("text");

                    b.Property<string>("PetAdmissionInfo")
                        .HasColumnType("text");

                    b.Property<int>("PetHealthStatus")
                        .HasColumnType("int");

                    b.Property<string>("PetName")
                        .HasColumnType("text");

                    b.HasKey("PetId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PetshopChallenge.Domain.Entities.PetAccommodation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccommodationNumber")
                        .HasColumnType("int");

                    b.Property<int>("AccommodationStatus")
                        .HasColumnType("int");

                    b.Property<int>("PetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PetId");

                    b.ToTable("Accommodations");
                });

            modelBuilder.Entity("PetshopChallenge.Domain.Entities.PetAccommodation", b =>
                {
                    b.HasOne("PetshopChallenge.Domain.Entities.Pet", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");
                });
#pragma warning restore 612, 618
        }
    }
}
